//Optimal merge pattern
/*
list count    6 5  3 2     ( approach 1  - merge by lhs - default standard ) 
            \ /
             11  3  2
              \  /
               13  3
                \ /
                 16
       merge cost = 11 + 13 + 16 = 40
              
       
        6 5  3 2     ( approach 2 - divide and conquer merge)
        \ /  \ /
         11   5
          \  /
           16
          
       merge cost : 11 + 5 + 16 = 32
       
        6 5  3 2     ( approach 3  - merge smallest list 1st )
             \ /
        6 5   5
          \   /
        6  10
        \  /
         16
         
         merge code = 5 + 10 + 16 = 31
         
         approach 3 seems best out of all.             
             
*/